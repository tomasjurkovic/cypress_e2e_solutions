{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-10-24T13:13:15.616Z",
    "end": "2023-10-24T13:13:19.708Z",
    "duration": 4092,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b072d5c7-5077-4f63-8478-779b04b88e38",
      "title": "",
      "fullFile": "cypress\\e2e\\automation-test-store\\alias-invoke.js",
      "file": "cypress\\e2e\\automation-test-store\\alias-invoke.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d3a08729-085d-4a50-9315-c370274d1daa",
          "title": "Aliases and Invoke test suite",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Calculate total value of products",
              "fullTitle": "Aliases and Invoke test suite Calculate total value of products",
              "timedOut": null,
              "duration": 2135,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let finalPrice = 0;\ncy.visit(\"https://automationteststore.com/\");\ncy.get(\".thumbnail\").as(\"products\");\n// cy.get(\"@products\")\n//   .find(\".oneprice\")\n//   .each(($el, index, $list) => {\n//     cy.log($el.text());\n//   });\ncy.get(\"@products\").find(\".oneprice\").invoke(\"text\").as(\"itemPrice\");\nlet totalPrice = 0;\ncy.get(\"@itemPrice\").then($linkText => {\n  let itemPrice = $linkText.split(\"$\");\n  for (let i = 0; i < itemPrice.length; i++) {\n    cy.log(itemPrice[i]);\n    totalPrice += Number(itemPrice[i]);\n    cy.log(totalPrice);\n  }\n});\ncy.get(\"@products\").find(\".pricenew\").invoke(\"text\").as(\"actionPrice\");\ncy.get(\"@actionPrice\").then($linkText => {\n  let itemPrice = $linkText.split(\"$\");\n  for (let j = 0; j < itemPrice.length; j++) {\n    cy.log(itemPrice[j]);\n    totalPrice += Number(itemPrice[j]);\n    cy.log(totalPrice);\n  }\n}).then(() => {\n  expect(totalPrice).to.equal(660.5);\n});",
              "err": {},
              "uuid": "195ee29a-d1ed-4aa0-9df1-8a31a95fe42c",
              "parentUUID": "d3a08729-085d-4a50-9315-c370274d1daa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "195ee29a-d1ed-4aa0-9df1-8a31a95fe42c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2135,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "id": "default",
        "reportDir": "cypress/results/mochawesome",
        "quite": true,
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}